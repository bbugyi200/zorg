[coverage:report]
ignore_errors = True
# Regexes for lines to exclude from consideration
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover

    # Don't complain about missing debug-only code:
    def __repr__
    if self\.debug

    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError

    # Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:
    [ ]*pass[ ]*\#?.*
    [ ]*\.\.\.[ ]*\#?.*

    # Don't complain about TYPE_CHECKING imports
    if TYPE_CHECKING:

[coverage:run]
omit = .venv/*,tests/*,docs/*,setup.py,.tox/*,src/zorg/grammar/*

[tool:pytest]
doctest_optionflags = NORMALIZE_WHITESPACE IGNORE_EXCEPTION_DETAIL ELLIPSIS NUMBER
testpaths = src tests

[flake8]
# W503 ignore line break occurred before a binary operator
# E203 ignore because it is not PEP 8 compliant https://github.com/ambv/black/issues/315
# E501 and B950 disable default 'line-too-long' warning, see https://github.com/ambv/black#line-length
# WPS210 ignore too many local variables
# WPS213 ignore too many expressions
# C81* ignore missing trailing comma as it is stricter than black
# WPS305 no f strings allowed
# WPS337 ignore multiline condition violations
# WPS348 ignore lines starting with a dot as black does this
ignore = W503,E203,E266,E501,B950,C81,WPS210,WPS213,WPS305,WPS337,WPS348
min-name-length = 3
max-try-body-length = 2
# emit a warning if the McCabe complexity of a function
# is higher than the value
max-complexity = 18
per-file-ignores = __init__.py:F401
# select the error codes you wish Flake8 to report
# see http://flake8.pycqa.org/en/2.5.5/warnings.html
select = B,C,E,F,N400,N8,W,T4
exclude = .venv, build, docs , src/zorg/grammar

[mypy]
exclude = src/zorg/grammar/
check_untyped_defs = True
disallow_incomplete_defs = True
disallow_untyped_calls = True
disallow_untyped_decorators = True
disallow_untyped_defs = True
explicit_package_bases = True
ignore_missing_imports = False
mypy_path = src
namespace_packages = True
no_implicit_optional = False
plugins = pydantic.mypy
show_error_codes = True
show_error_context = True
warn_redundant_casts  = True
warn_return_any = True
warn_unreachable = True
warn_unused_configs  = True
warn_unused_ignores  = True

[mypy-zorg.service.compiler._file_compiler,zorg.service.compiler._query_compiler,zorg.service.compiler._mutate_compiler]
disallow_untyped_calls = False

[mypy-zorg.grammar.*]
follow_imports = silent

[mypy-antlr4.*,pluggy.*,setuptools.*]
ignore_missing_imports = True
