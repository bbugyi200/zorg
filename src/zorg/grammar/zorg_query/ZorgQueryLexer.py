# Generated from ZorgQuery.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,66,455,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,
        65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,
        71,2,72,7,72,2,73,7,73,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,
        4,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,
        1,11,1,12,1,12,1,13,1,13,1,14,1,14,1,15,1,15,1,16,1,16,1,17,1,17,
        1,17,1,18,1,18,1,18,1,19,1,19,1,20,1,20,1,20,1,21,1,21,1,21,1,21,
        1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,
        1,23,1,23,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,25,1,25,
        1,25,1,25,1,25,1,26,3,26,232,8,26,1,26,1,26,1,27,1,27,1,28,1,28,
        1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,30,1,30,
        1,30,1,30,1,30,1,31,1,31,1,31,1,32,1,32,1,32,1,33,1,33,1,33,1,34,
        1,34,1,34,1,35,1,35,1,35,5,35,271,8,35,10,35,12,35,274,9,35,1,36,
        1,36,1,36,1,36,1,36,3,36,281,8,36,1,37,1,37,1,37,1,37,1,37,1,37,
        1,37,1,38,1,38,1,38,5,38,293,8,38,10,38,12,38,296,9,38,1,39,1,39,
        1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,
        1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,
        1,39,1,39,1,39,1,39,1,39,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,
        1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,
        1,40,1,40,1,40,1,40,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,
        1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,42,1,42,1,42,1,42,1,42,
        1,42,1,42,1,42,1,42,1,43,1,43,1,43,1,43,1,44,1,44,1,44,1,44,1,44,
        1,44,1,45,1,45,1,46,1,46,1,47,1,47,1,48,1,48,1,49,1,49,1,50,1,50,
        1,51,1,51,1,52,1,52,1,53,1,53,1,54,1,54,1,55,1,55,1,56,1,56,1,57,
        1,57,1,58,1,58,1,59,1,59,1,60,1,60,1,61,1,61,1,62,1,62,1,63,1,63,
        1,64,1,64,1,65,1,65,1,66,1,66,1,67,1,67,1,68,1,68,3,68,440,8,68,
        1,69,1,69,1,70,1,70,1,71,1,71,1,72,1,72,3,72,450,8,72,1,73,1,73,
        3,73,454,8,73,0,0,74,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,
        10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,
        21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,
        32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,
        43,87,44,89,45,91,46,93,47,95,48,97,49,99,50,101,51,103,52,105,53,
        107,54,109,55,111,56,113,57,115,58,117,59,119,60,121,61,123,62,125,
        63,127,64,129,65,131,66,133,0,135,0,137,0,139,0,141,0,143,0,145,
        0,147,0,1,0,2,9,0,33,33,38,38,44,44,59,59,61,61,63,63,91,93,96,96,
        123,125,6,0,65,72,74,78,80,90,97,105,107,107,109,122,455,0,1,1,0,
        0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,
        0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,
        0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,
        0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,
        0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,
        0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,
        0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,
        0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,
        0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,
        0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,
        0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,
        1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,
        0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,
        0,0,0,0,131,1,0,0,0,1,149,1,0,0,0,3,151,1,0,0,0,5,153,1,0,0,0,7,
        155,1,0,0,0,9,157,1,0,0,0,11,162,1,0,0,0,13,164,1,0,0,0,15,166,1,
        0,0,0,17,168,1,0,0,0,19,170,1,0,0,0,21,172,1,0,0,0,23,174,1,0,0,
        0,25,176,1,0,0,0,27,178,1,0,0,0,29,180,1,0,0,0,31,182,1,0,0,0,33,
        184,1,0,0,0,35,186,1,0,0,0,37,189,1,0,0,0,39,192,1,0,0,0,41,194,
        1,0,0,0,43,197,1,0,0,0,45,204,1,0,0,0,47,211,1,0,0,0,49,220,1,0,
        0,0,51,225,1,0,0,0,53,231,1,0,0,0,55,235,1,0,0,0,57,237,1,0,0,0,
        59,239,1,0,0,0,61,250,1,0,0,0,63,255,1,0,0,0,65,258,1,0,0,0,67,261,
        1,0,0,0,69,264,1,0,0,0,71,267,1,0,0,0,73,275,1,0,0,0,75,282,1,0,
        0,0,77,289,1,0,0,0,79,297,1,0,0,0,81,330,1,0,0,0,83,355,1,0,0,0,
        85,372,1,0,0,0,87,381,1,0,0,0,89,385,1,0,0,0,91,391,1,0,0,0,93,393,
        1,0,0,0,95,395,1,0,0,0,97,397,1,0,0,0,99,399,1,0,0,0,101,401,1,0,
        0,0,103,403,1,0,0,0,105,405,1,0,0,0,107,407,1,0,0,0,109,409,1,0,
        0,0,111,411,1,0,0,0,113,413,1,0,0,0,115,415,1,0,0,0,117,417,1,0,
        0,0,119,419,1,0,0,0,121,421,1,0,0,0,123,423,1,0,0,0,125,425,1,0,
        0,0,127,427,1,0,0,0,129,429,1,0,0,0,131,431,1,0,0,0,133,433,1,0,
        0,0,135,435,1,0,0,0,137,439,1,0,0,0,139,441,1,0,0,0,141,443,1,0,
        0,0,143,445,1,0,0,0,145,449,1,0,0,0,147,453,1,0,0,0,149,150,5,83,
        0,0,150,2,1,0,0,0,151,152,5,87,0,0,152,4,1,0,0,0,153,154,5,79,0,
        0,154,6,1,0,0,0,155,156,5,71,0,0,156,8,1,0,0,0,157,158,5,110,0,0,
        158,159,5,111,0,0,159,160,5,116,0,0,160,161,5,101,0,0,161,10,1,0,
        0,0,162,163,5,124,0,0,163,12,1,0,0,0,164,165,5,49,0,0,165,14,1,0,
        0,0,166,167,5,50,0,0,167,16,1,0,0,0,168,169,5,51,0,0,169,18,1,0,
        0,0,170,171,5,52,0,0,171,20,1,0,0,0,172,173,5,53,0,0,173,22,1,0,
        0,0,174,175,5,54,0,0,175,24,1,0,0,0,176,177,5,55,0,0,177,26,1,0,
        0,0,178,179,5,56,0,0,179,28,1,0,0,0,180,181,5,57,0,0,181,30,1,0,
        0,0,182,183,5,33,0,0,183,32,1,0,0,0,184,185,5,48,0,0,185,34,1,0,
        0,0,186,187,5,60,0,0,187,188,5,61,0,0,188,36,1,0,0,0,189,190,5,62,
        0,0,190,191,5,61,0,0,191,38,1,0,0,0,192,193,5,99,0,0,193,40,1,0,
        0,0,194,195,5,102,0,0,195,196,5,61,0,0,196,42,1,0,0,0,197,198,5,
        99,0,0,198,199,5,114,0,0,199,200,5,101,0,0,200,201,5,97,0,0,201,
        202,5,116,0,0,202,203,5,101,0,0,203,44,1,0,0,0,204,205,5,109,0,0,
        205,206,5,111,0,0,206,207,5,100,0,0,207,208,5,105,0,0,208,209,5,
        102,0,0,209,210,5,121,0,0,210,46,1,0,0,0,211,212,5,112,0,0,212,213,
        5,114,0,0,213,214,5,105,0,0,214,215,5,111,0,0,215,216,5,114,0,0,
        216,217,5,105,0,0,217,218,5,116,0,0,218,219,5,121,0,0,219,48,1,0,
        0,0,220,221,5,102,0,0,221,222,5,105,0,0,222,223,5,108,0,0,223,224,
        5,101,0,0,224,50,1,0,0,0,225,226,5,116,0,0,226,227,5,121,0,0,227,
        228,5,112,0,0,228,229,5,101,0,0,229,52,1,0,0,0,230,232,5,13,0,0,
        231,230,1,0,0,0,231,232,1,0,0,0,232,233,1,0,0,0,233,234,5,10,0,0,
        234,54,1,0,0,0,235,236,5,111,0,0,236,56,1,0,0,0,237,238,5,120,0,
        0,238,58,1,0,0,0,239,240,5,50,0,0,240,241,3,139,69,0,241,242,3,139,
        69,0,242,243,3,139,69,0,243,244,3,97,48,0,244,245,3,143,71,0,245,
        246,3,139,69,0,246,247,3,97,48,0,247,248,3,141,70,0,248,249,3,139,
        69,0,249,60,1,0,0,0,250,251,2,48,50,0,251,252,3,139,69,0,252,253,
        2,48,53,0,253,254,3,139,69,0,254,62,1,0,0,0,255,256,3,95,47,0,256,
        257,3,75,37,0,257,64,1,0,0,0,258,259,3,93,46,0,259,260,3,75,37,0,
        260,66,1,0,0,0,261,262,3,131,65,0,262,263,3,75,37,0,263,68,1,0,0,
        0,264,265,5,80,0,0,265,266,3,139,69,0,266,70,1,0,0,0,267,272,3,147,
        73,0,268,271,3,147,73,0,269,271,3,103,51,0,270,268,1,0,0,0,270,269,
        1,0,0,0,271,274,1,0,0,0,272,270,1,0,0,0,272,273,1,0,0,0,273,72,1,
        0,0,0,274,272,1,0,0,0,275,276,3,75,37,0,276,277,3,111,55,0,277,278,
        3,137,68,0,278,280,3,137,68,0,279,281,3,137,68,0,280,279,1,0,0,0,
        280,281,1,0,0,0,281,74,1,0,0,0,282,283,3,139,69,0,283,284,3,139,
        69,0,284,285,3,143,71,0,285,286,3,139,69,0,286,287,3,141,70,0,287,
        288,3,139,69,0,288,76,1,0,0,0,289,294,3,139,69,0,290,293,3,147,73,
        0,291,293,3,103,51,0,292,290,1,0,0,0,292,291,1,0,0,0,293,296,1,0,
        0,0,294,292,1,0,0,0,294,295,1,0,0,0,295,78,1,0,0,0,296,294,1,0,0,
        0,297,298,5,45,0,0,298,299,5,45,0,0,299,300,5,45,0,0,300,301,5,45,
        0,0,301,302,5,45,0,0,302,303,5,45,0,0,303,304,5,45,0,0,304,305,5,
        45,0,0,305,306,5,45,0,0,306,307,5,45,0,0,307,308,5,45,0,0,308,309,
        5,45,0,0,309,310,5,45,0,0,310,311,5,45,0,0,311,312,5,45,0,0,312,
        313,5,45,0,0,313,314,5,45,0,0,314,315,5,45,0,0,315,316,5,45,0,0,
        316,317,5,45,0,0,317,318,5,45,0,0,318,319,5,45,0,0,319,320,5,45,
        0,0,320,321,5,45,0,0,321,322,5,45,0,0,322,323,5,45,0,0,323,324,5,
        45,0,0,324,325,5,45,0,0,325,326,5,45,0,0,326,327,5,45,0,0,327,328,
        5,45,0,0,328,329,5,45,0,0,329,80,1,0,0,0,330,331,5,45,0,0,331,332,
        5,45,0,0,332,333,5,45,0,0,333,334,5,45,0,0,334,335,5,45,0,0,335,
        336,5,45,0,0,336,337,5,45,0,0,337,338,5,45,0,0,338,339,5,45,0,0,
        339,340,5,45,0,0,340,341,5,45,0,0,341,342,5,45,0,0,342,343,5,45,
        0,0,343,344,5,45,0,0,344,345,5,45,0,0,345,346,5,45,0,0,346,347,5,
        45,0,0,347,348,5,45,0,0,348,349,5,45,0,0,349,350,5,45,0,0,350,351,
        5,45,0,0,351,352,5,45,0,0,352,353,5,45,0,0,353,354,5,45,0,0,354,
        82,1,0,0,0,355,356,5,45,0,0,356,357,5,45,0,0,357,358,5,45,0,0,358,
        359,5,45,0,0,359,360,5,45,0,0,360,361,5,45,0,0,361,362,5,45,0,0,
        362,363,5,45,0,0,363,364,5,45,0,0,364,365,5,45,0,0,365,366,5,45,
        0,0,366,367,5,45,0,0,367,368,5,45,0,0,368,369,5,45,0,0,369,370,5,
        45,0,0,370,371,5,45,0,0,371,84,1,0,0,0,372,373,5,45,0,0,373,374,
        5,45,0,0,374,375,5,45,0,0,375,376,5,45,0,0,376,377,5,45,0,0,377,
        378,5,45,0,0,378,379,5,45,0,0,379,380,5,45,0,0,380,86,1,0,0,0,381,
        382,5,32,0,0,382,383,5,32,0,0,383,384,5,45,0,0,384,88,1,0,0,0,385,
        386,5,32,0,0,386,387,5,32,0,0,387,388,5,32,0,0,388,389,5,32,0,0,
        389,390,5,45,0,0,390,90,1,0,0,0,391,392,7,0,0,0,392,92,1,0,0,0,393,
        394,5,36,0,0,394,94,1,0,0,0,395,396,5,94,0,0,396,96,1,0,0,0,397,
        398,5,45,0,0,398,98,1,0,0,0,399,400,5,46,0,0,400,100,1,0,0,0,401,
        402,5,47,0,0,402,102,1,0,0,0,403,404,5,95,0,0,404,104,1,0,0,0,405,
        406,5,32,0,0,406,106,1,0,0,0,407,408,5,40,0,0,408,108,1,0,0,0,409,
        410,5,41,0,0,410,110,1,0,0,0,411,412,5,35,0,0,412,112,1,0,0,0,413,
        414,5,64,0,0,414,114,1,0,0,0,415,416,5,43,0,0,416,116,1,0,0,0,417,
        418,5,37,0,0,418,118,1,0,0,0,419,420,5,39,0,0,420,120,1,0,0,0,421,
        422,5,34,0,0,422,122,1,0,0,0,423,424,5,126,0,0,424,124,1,0,0,0,425,
        426,5,42,0,0,426,126,1,0,0,0,427,428,5,60,0,0,428,128,1,0,0,0,429,
        430,5,62,0,0,430,130,1,0,0,0,431,432,5,58,0,0,432,132,1,0,0,0,433,
        434,2,65,90,0,434,134,1,0,0,0,435,436,2,97,122,0,436,136,1,0,0,0,
        437,440,3,139,69,0,438,440,7,1,0,0,439,437,1,0,0,0,439,438,1,0,0,
        0,440,138,1,0,0,0,441,442,2,48,57,0,442,140,1,0,0,0,443,444,2,48,
        51,0,444,142,1,0,0,0,445,446,2,48,49,0,446,144,1,0,0,0,447,450,3,
        133,66,0,448,450,3,135,67,0,449,447,1,0,0,0,449,448,1,0,0,0,450,
        146,1,0,0,0,451,454,3,145,72,0,452,454,3,139,69,0,453,451,1,0,0,
        0,453,452,1,0,0,0,454,148,1,0,0,0,10,0,231,270,272,280,292,294,439,
        449,453,0
    ]

class ZorgQueryLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    NL = 27
    LOWER_O = 28
    LOWER_X = 29
    DATE = 30
    TIME = 31
    CREATE_RANGE_HEAD = 32
    MODIFY_RANGE_HEAD = 33
    DATE_RANGE_TAIL = 34
    PRIORITY = 35
    ID = 36
    ZID = 37
    SHORT_DATE = 38
    NUM_ID = 39
    H1_HEADER = 40
    H2_HEADER = 41
    H3_HEADER = 42
    H4_HEADER = 43
    TWO_SPACE_DASH = 44
    FOUR_SPACE_DASH = 45
    SYMBOL = 46
    DOLLAR = 47
    HAT = 48
    DASH = 49
    DOT = 50
    FSLASH = 51
    UNDERSCORE = 52
    SPACE = 53
    LPAREN = 54
    RPAREN = 55
    HASH = 56
    AT_SIGN = 57
    PLUS = 58
    PERCENT = 59
    SQUOTE = 60
    DQUOTE = 61
    TILDE = 62
    STAR = 63
    LANGLE = 64
    RANGLE = 65
    COLON = 66

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'S'", "'W'", "'O'", "'G'", "'note'", "'|'", "'1'", "'2'", "'3'", 
            "'4'", "'5'", "'6'", "'7'", "'8'", "'9'", "'!'", "'0'", "'<='", 
            "'>='", "'c'", "'f='", "'create'", "'modify'", "'priority'", 
            "'file'", "'type'", "'o'", "'x'", "'--------------------------------'", 
            "'------------------------'", "'----------------'", "'--------'", 
            "'  -'", "'    -'", "'$'", "'^'", "'-'", "'.'", "'/'", "'_'", 
            "' '", "'('", "')'", "'#'", "'@'", "'+'", "'%'", "'''", "'\"'", 
            "'~'", "'*'", "'<'", "'>'", "':'" ]

    symbolicNames = [ "<INVALID>",
            "NL", "LOWER_O", "LOWER_X", "DATE", "TIME", "CREATE_RANGE_HEAD", 
            "MODIFY_RANGE_HEAD", "DATE_RANGE_TAIL", "PRIORITY", "ID", "ZID", 
            "SHORT_DATE", "NUM_ID", "H1_HEADER", "H2_HEADER", "H3_HEADER", 
            "H4_HEADER", "TWO_SPACE_DASH", "FOUR_SPACE_DASH", "SYMBOL", 
            "DOLLAR", "HAT", "DASH", "DOT", "FSLASH", "UNDERSCORE", "SPACE", 
            "LPAREN", "RPAREN", "HASH", "AT_SIGN", "PLUS", "PERCENT", "SQUOTE", 
            "DQUOTE", "TILDE", "STAR", "LANGLE", "RANGLE", "COLON" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "NL", "LOWER_O", "LOWER_X", "DATE", "TIME", "CREATE_RANGE_HEAD", 
                  "MODIFY_RANGE_HEAD", "DATE_RANGE_TAIL", "PRIORITY", "ID", 
                  "ZID", "SHORT_DATE", "NUM_ID", "H1_HEADER", "H2_HEADER", 
                  "H3_HEADER", "H4_HEADER", "TWO_SPACE_DASH", "FOUR_SPACE_DASH", 
                  "SYMBOL", "DOLLAR", "HAT", "DASH", "DOT", "FSLASH", "UNDERSCORE", 
                  "SPACE", "LPAREN", "RPAREN", "HASH", "AT_SIGN", "PLUS", 
                  "PERCENT", "SQUOTE", "DQUOTE", "TILDE", "STAR", "LANGLE", 
                  "RANGLE", "COLON", "UPPER_LETTER", "LOWER_LETTER", "ZID_CHAR", 
                  "NUM", "FIRST_D_NUM", "FIRST_M_NUM", "ALPHA", "ALPHANUM" ]

    grammarFileName = "ZorgQuery.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


