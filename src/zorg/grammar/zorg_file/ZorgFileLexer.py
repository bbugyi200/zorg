# Generated from src/zorg/grammar/zorg_file/ZorgFile.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,34,206,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,1,
        0,1,0,1,1,1,1,1,2,1,2,1,2,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,
        4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,6,3,6,105,8,6,1,6,1,6,1,7,1,7,1,
        8,1,8,1,9,1,9,1,9,5,9,116,8,9,10,9,12,9,119,9,9,1,10,1,10,1,10,1,
        10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,
        12,1,12,1,12,5,12,140,8,12,10,12,12,12,143,9,12,1,13,1,13,1,13,1,
        13,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,16,1,16,1,17,1,17,1,
        18,1,18,1,19,1,19,1,20,1,20,1,21,1,21,1,22,1,22,1,23,1,23,1,24,1,
        24,1,25,1,25,1,26,1,26,1,27,1,27,1,28,1,28,1,29,1,29,1,30,1,30,1,
        31,1,31,1,32,1,32,1,33,1,33,1,34,1,34,1,35,1,35,1,36,1,36,1,37,1,
        37,3,37,201,8,37,1,38,1,38,3,38,205,8,38,0,0,39,1,1,3,2,5,3,7,4,
        9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,
        33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,
        55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,0,71,0,73,0,75,0,77,
        0,1,0,1,10,0,33,33,36,36,38,38,44,44,59,59,61,61,63,63,91,94,96,
        96,123,125,207,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,
        9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,
        19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,
        29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,
        39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,
        49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,
        59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,1,
        79,1,0,0,0,3,81,1,0,0,0,5,83,1,0,0,0,7,86,1,0,0,0,9,89,1,0,0,0,11,
        97,1,0,0,0,13,104,1,0,0,0,15,108,1,0,0,0,17,110,1,0,0,0,19,112,1,
        0,0,0,21,120,1,0,0,0,23,131,1,0,0,0,25,136,1,0,0,0,27,144,1,0,0,
        0,29,148,1,0,0,0,31,154,1,0,0,0,33,156,1,0,0,0,35,158,1,0,0,0,37,
        160,1,0,0,0,39,162,1,0,0,0,41,164,1,0,0,0,43,166,1,0,0,0,45,168,
        1,0,0,0,47,170,1,0,0,0,49,172,1,0,0,0,51,174,1,0,0,0,53,176,1,0,
        0,0,55,178,1,0,0,0,57,180,1,0,0,0,59,182,1,0,0,0,61,184,1,0,0,0,
        63,186,1,0,0,0,65,188,1,0,0,0,67,190,1,0,0,0,69,192,1,0,0,0,71,194,
        1,0,0,0,73,196,1,0,0,0,75,200,1,0,0,0,77,204,1,0,0,0,79,80,5,91,
        0,0,80,2,1,0,0,0,81,82,5,93,0,0,82,4,1,0,0,0,83,84,5,91,0,0,84,85,
        5,91,0,0,85,6,1,0,0,0,86,87,5,93,0,0,87,88,5,93,0,0,88,8,1,0,0,0,
        89,90,5,61,0,0,90,91,5,61,0,0,91,92,5,61,0,0,92,93,5,61,0,0,93,94,
        5,61,0,0,94,95,5,61,0,0,95,96,5,61,0,0,96,10,1,0,0,0,97,98,5,42,
        0,0,98,99,5,42,0,0,99,100,5,42,0,0,100,101,5,42,0,0,101,102,5,42,
        0,0,102,12,1,0,0,0,103,105,5,13,0,0,104,103,1,0,0,0,104,105,1,0,
        0,0,105,106,1,0,0,0,106,107,5,10,0,0,107,14,1,0,0,0,108,109,5,111,
        0,0,109,16,1,0,0,0,110,111,5,120,0,0,111,18,1,0,0,0,112,117,3,75,
        37,0,113,116,3,77,38,0,114,116,3,39,19,0,115,113,1,0,0,0,115,114,
        1,0,0,0,116,119,1,0,0,0,117,115,1,0,0,0,117,118,1,0,0,0,118,20,1,
        0,0,0,119,117,1,0,0,0,120,121,5,50,0,0,121,122,3,73,36,0,122,123,
        3,73,36,0,123,124,3,73,36,0,124,125,3,33,16,0,125,126,2,48,49,0,
        126,127,3,73,36,0,127,128,3,33,16,0,128,129,2,48,51,0,129,130,3,
        73,36,0,130,22,1,0,0,0,131,132,2,48,50,0,132,133,3,73,36,0,133,134,
        2,48,53,0,134,135,3,73,36,0,135,24,1,0,0,0,136,141,3,73,36,0,137,
        140,3,77,38,0,138,140,3,39,19,0,139,137,1,0,0,0,139,138,1,0,0,0,
        140,143,1,0,0,0,141,139,1,0,0,0,141,142,1,0,0,0,142,26,1,0,0,0,143,
        141,1,0,0,0,144,145,5,32,0,0,145,146,5,32,0,0,146,147,5,45,0,0,147,
        28,1,0,0,0,148,149,5,32,0,0,149,150,5,32,0,0,150,151,5,32,0,0,151,
        152,5,32,0,0,152,153,5,45,0,0,153,30,1,0,0,0,154,155,7,0,0,0,155,
        32,1,0,0,0,156,157,5,45,0,0,157,34,1,0,0,0,158,159,5,46,0,0,159,
        36,1,0,0,0,160,161,5,47,0,0,161,38,1,0,0,0,162,163,5,95,0,0,163,
        40,1,0,0,0,164,165,5,58,0,0,165,42,1,0,0,0,166,167,5,32,0,0,167,
        44,1,0,0,0,168,169,5,40,0,0,169,46,1,0,0,0,170,171,5,41,0,0,171,
        48,1,0,0,0,172,173,5,35,0,0,173,50,1,0,0,0,174,175,5,64,0,0,175,
        52,1,0,0,0,176,177,5,43,0,0,177,54,1,0,0,0,178,179,5,37,0,0,179,
        56,1,0,0,0,180,181,5,39,0,0,181,58,1,0,0,0,182,183,5,34,0,0,183,
        60,1,0,0,0,184,185,5,126,0,0,185,62,1,0,0,0,186,187,5,42,0,0,187,
        64,1,0,0,0,188,189,5,60,0,0,189,66,1,0,0,0,190,191,5,62,0,0,191,
        68,1,0,0,0,192,193,2,65,90,0,193,70,1,0,0,0,194,195,2,97,122,0,195,
        72,1,0,0,0,196,197,2,48,57,0,197,74,1,0,0,0,198,201,3,69,34,0,199,
        201,3,71,35,0,200,198,1,0,0,0,200,199,1,0,0,0,201,76,1,0,0,0,202,
        205,3,75,37,0,203,205,3,73,36,0,204,202,1,0,0,0,204,203,1,0,0,0,
        205,78,1,0,0,0,8,0,104,115,117,139,141,200,204,0
    ]

class ZorgFileLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    NL = 7
    LOWER_O = 8
    LOWER_X = 9
    ID = 10
    DATE = 11
    TIME = 12
    NUM_ID = 13
    TWO_SPACE_DASH = 14
    FOUR_SPACE_DASH = 15
    SYMBOL = 16
    DASH = 17
    DOT = 18
    FSLASH = 19
    UNDERSCORE = 20
    COLON = 21
    SPACE = 22
    LPAREN = 23
    RPAREN = 24
    HASH = 25
    AT_SIGN = 26
    PLUS = 27
    PERCENT = 28
    SQUOTE = 29
    DQUOTE = 30
    TILDE = 31
    STAR = 32
    LANGLE = 33
    RANGLE = 34

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'['", "']'", "'[['", "']]'", "'======='", "'*****'", "'o'", 
            "'x'", "'  -'", "'    -'", "'-'", "'.'", "'/'", "'_'", "':'", 
            "' '", "'('", "')'", "'#'", "'@'", "'+'", "'%'", "'''", "'\"'", 
            "'~'", "'*'", "'<'", "'>'" ]

    symbolicNames = [ "<INVALID>",
            "NL", "LOWER_O", "LOWER_X", "ID", "DATE", "TIME", "NUM_ID", 
            "TWO_SPACE_DASH", "FOUR_SPACE_DASH", "SYMBOL", "DASH", "DOT", 
            "FSLASH", "UNDERSCORE", "COLON", "SPACE", "LPAREN", "RPAREN", 
            "HASH", "AT_SIGN", "PLUS", "PERCENT", "SQUOTE", "DQUOTE", "TILDE", 
            "STAR", "LANGLE", "RANGLE" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "NL", 
                  "LOWER_O", "LOWER_X", "ID", "DATE", "TIME", "NUM_ID", 
                  "TWO_SPACE_DASH", "FOUR_SPACE_DASH", "SYMBOL", "DASH", 
                  "DOT", "FSLASH", "UNDERSCORE", "COLON", "SPACE", "LPAREN", 
                  "RPAREN", "HASH", "AT_SIGN", "PLUS", "PERCENT", "SQUOTE", 
                  "DQUOTE", "TILDE", "STAR", "LANGLE", "RANGLE", "UPPER_LETTER", 
                  "LOWER_LETTER", "NUM", "ALPHA", "ALPHANUM" ]

    grammarFileName = "ZorgFile.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


