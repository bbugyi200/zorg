# Generated from src/zorg/grammar/zorg_file/ZorgFile.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,26,148,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,1,0,1,0,1,1,1,1,
        1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,5,1,6,1,6,1,6,1,7,1,7,1,7,1,7,
        1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,9,3,9,95,8,9,1,9,1,9,1,
        10,1,10,4,10,101,8,10,11,10,12,10,102,1,11,1,11,1,12,1,12,1,13,1,
        13,1,14,1,14,1,15,1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,19,1,
        20,1,20,1,21,1,21,1,22,1,22,1,23,1,23,1,24,1,24,1,25,1,25,1,26,1,
        26,1,27,1,27,1,28,1,28,1,29,1,29,3,29,143,8,29,1,30,1,30,3,30,147,
        8,30,0,0,31,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,
        23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,
        45,23,47,24,49,25,51,26,53,0,55,0,57,0,59,0,61,0,1,0,1,5,0,33,33,
        44,44,59,63,91,94,124,124,147,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,
        0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,
        0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,
        0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,
        0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,
        0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,1,63,1,0,0,0,3,65,1,0,0,0,
        5,67,1,0,0,0,7,69,1,0,0,0,9,71,1,0,0,0,11,73,1,0,0,0,13,76,1,0,0,
        0,15,79,1,0,0,0,17,87,1,0,0,0,19,94,1,0,0,0,21,100,1,0,0,0,23,104,
        1,0,0,0,25,106,1,0,0,0,27,108,1,0,0,0,29,110,1,0,0,0,31,112,1,0,
        0,0,33,114,1,0,0,0,35,116,1,0,0,0,37,118,1,0,0,0,39,120,1,0,0,0,
        41,122,1,0,0,0,43,124,1,0,0,0,45,126,1,0,0,0,47,128,1,0,0,0,49,130,
        1,0,0,0,51,132,1,0,0,0,53,134,1,0,0,0,55,136,1,0,0,0,57,138,1,0,
        0,0,59,142,1,0,0,0,61,146,1,0,0,0,63,64,5,111,0,0,64,2,1,0,0,0,65,
        66,5,120,0,0,66,4,1,0,0,0,67,68,5,126,0,0,68,6,1,0,0,0,69,70,5,91,
        0,0,70,8,1,0,0,0,71,72,5,93,0,0,72,10,1,0,0,0,73,74,5,91,0,0,74,
        75,5,91,0,0,75,12,1,0,0,0,76,77,5,93,0,0,77,78,5,93,0,0,78,14,1,
        0,0,0,79,80,5,61,0,0,80,81,5,61,0,0,81,82,5,61,0,0,82,83,5,61,0,
        0,83,84,5,61,0,0,84,85,5,61,0,0,85,86,5,61,0,0,86,16,1,0,0,0,87,
        88,5,42,0,0,88,89,5,42,0,0,89,90,5,42,0,0,90,91,5,42,0,0,91,92,5,
        42,0,0,92,18,1,0,0,0,93,95,5,13,0,0,94,93,1,0,0,0,94,95,1,0,0,0,
        95,96,1,0,0,0,96,97,5,10,0,0,97,20,1,0,0,0,98,101,3,61,30,0,99,101,
        3,31,15,0,100,98,1,0,0,0,100,99,1,0,0,0,101,102,1,0,0,0,102,100,
        1,0,0,0,102,103,1,0,0,0,103,22,1,0,0,0,104,105,7,0,0,0,105,24,1,
        0,0,0,106,107,5,45,0,0,107,26,1,0,0,0,108,109,5,46,0,0,109,28,1,
        0,0,0,110,111,5,47,0,0,111,30,1,0,0,0,112,113,5,95,0,0,113,32,1,
        0,0,0,114,115,5,58,0,0,115,34,1,0,0,0,116,117,5,32,0,0,117,36,1,
        0,0,0,118,119,5,40,0,0,119,38,1,0,0,0,120,121,5,41,0,0,121,40,1,
        0,0,0,122,123,5,35,0,0,123,42,1,0,0,0,124,125,5,64,0,0,125,44,1,
        0,0,0,126,127,5,43,0,0,127,46,1,0,0,0,128,129,5,37,0,0,129,48,1,
        0,0,0,130,131,5,39,0,0,131,50,1,0,0,0,132,133,5,34,0,0,133,52,1,
        0,0,0,134,135,2,65,90,0,135,54,1,0,0,0,136,137,2,97,122,0,137,56,
        1,0,0,0,138,139,2,48,57,0,139,58,1,0,0,0,140,143,3,53,26,0,141,143,
        3,55,27,0,142,140,1,0,0,0,142,141,1,0,0,0,143,60,1,0,0,0,144,147,
        3,59,29,0,145,147,3,57,28,0,146,144,1,0,0,0,146,145,1,0,0,0,147,
        62,1,0,0,0,6,0,94,100,102,142,146,0
    ]

class ZorgFileLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    NL = 10
    ID = 11
    SYMBOL = 12
    DASH = 13
    DOT = 14
    FSLASH = 15
    UNDERSCORE = 16
    COLON = 17
    SPACE = 18
    LPAREN = 19
    RPAREN = 20
    HASH = 21
    AT_SIGN = 22
    PLUS = 23
    PERCENT = 24
    SQUOTE = 25
    DQUOTE = 26

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'o'", "'x'", "'~'", "'['", "']'", "'[['", "']]'", "'======='", 
            "'*****'", "'-'", "'.'", "'/'", "'_'", "':'", "' '", "'('", 
            "')'", "'#'", "'@'", "'+'", "'%'", "'''", "'\"'" ]

    symbolicNames = [ "<INVALID>",
            "NL", "ID", "SYMBOL", "DASH", "DOT", "FSLASH", "UNDERSCORE", 
            "COLON", "SPACE", "LPAREN", "RPAREN", "HASH", "AT_SIGN", "PLUS", 
            "PERCENT", "SQUOTE", "DQUOTE" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "NL", "ID", "SYMBOL", "DASH", "DOT", "FSLASH", 
                  "UNDERSCORE", "COLON", "SPACE", "LPAREN", "RPAREN", "HASH", 
                  "AT_SIGN", "PLUS", "PERCENT", "SQUOTE", "DQUOTE", "UPPER_LETTER", 
                  "LOWER_LETTER", "DIGIT", "LETTER", "ALPHANUM" ]

    grammarFileName = "ZorgFile.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


