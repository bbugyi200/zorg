# Generated from ZorgFile.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,37,242,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,1,0,1,
        0,1,1,1,1,1,2,1,2,1,2,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,
        4,1,5,1,5,1,5,1,5,1,5,1,5,1,6,3,6,117,8,6,1,6,1,6,1,7,1,7,1,8,1,
        8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,
        1,10,1,11,1,11,1,11,5,11,144,8,11,10,11,12,11,147,9,11,1,12,1,12,
        1,12,1,12,1,12,3,12,154,8,12,1,13,1,13,1,13,1,13,1,13,1,13,1,13,
        1,14,1,14,1,14,5,14,166,8,14,10,14,12,14,169,9,14,1,15,1,15,1,15,
        1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,19,
        1,20,1,20,1,21,1,21,1,22,1,22,1,23,1,23,1,24,1,24,1,25,1,25,1,26,
        1,26,1,27,1,27,1,28,1,28,1,29,1,29,1,30,1,30,1,31,1,31,1,32,1,32,
        1,33,1,33,1,34,1,34,1,35,1,35,1,36,1,36,1,37,1,37,1,38,1,38,1,39,
        1,39,3,39,227,8,39,1,40,1,40,1,41,1,41,1,42,1,42,1,43,1,43,3,43,
        237,8,43,1,44,1,44,3,44,241,8,44,0,0,45,1,1,3,2,5,3,7,4,9,5,11,6,
        13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,
        18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,
        29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,0,77,0,79,
        0,81,0,83,0,85,0,87,0,89,0,1,0,2,10,0,33,33,36,36,38,38,44,44,59,
        59,61,61,63,63,91,93,96,96,123,125,6,0,65,72,74,78,80,90,97,105,
        107,107,109,122,242,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,
        0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,
        0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,
        0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,
        0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,
        0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,
        0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,
        0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,1,91,1,0,0,0,3,93,1,0,
        0,0,5,95,1,0,0,0,7,98,1,0,0,0,9,101,1,0,0,0,11,109,1,0,0,0,13,116,
        1,0,0,0,15,120,1,0,0,0,17,122,1,0,0,0,19,124,1,0,0,0,21,135,1,0,
        0,0,23,140,1,0,0,0,25,148,1,0,0,0,27,155,1,0,0,0,29,162,1,0,0,0,
        31,170,1,0,0,0,33,174,1,0,0,0,35,180,1,0,0,0,37,182,1,0,0,0,39,184,
        1,0,0,0,41,186,1,0,0,0,43,188,1,0,0,0,45,190,1,0,0,0,47,192,1,0,
        0,0,49,194,1,0,0,0,51,196,1,0,0,0,53,198,1,0,0,0,55,200,1,0,0,0,
        57,202,1,0,0,0,59,204,1,0,0,0,61,206,1,0,0,0,63,208,1,0,0,0,65,210,
        1,0,0,0,67,212,1,0,0,0,69,214,1,0,0,0,71,216,1,0,0,0,73,218,1,0,
        0,0,75,220,1,0,0,0,77,222,1,0,0,0,79,226,1,0,0,0,81,228,1,0,0,0,
        83,230,1,0,0,0,85,232,1,0,0,0,87,236,1,0,0,0,89,240,1,0,0,0,91,92,
        5,91,0,0,92,2,1,0,0,0,93,94,5,93,0,0,94,4,1,0,0,0,95,96,5,91,0,0,
        96,97,5,91,0,0,97,6,1,0,0,0,98,99,5,93,0,0,99,100,5,93,0,0,100,8,
        1,0,0,0,101,102,5,61,0,0,102,103,5,61,0,0,103,104,5,61,0,0,104,105,
        5,61,0,0,105,106,5,61,0,0,106,107,5,61,0,0,107,108,5,61,0,0,108,
        10,1,0,0,0,109,110,5,42,0,0,110,111,5,42,0,0,111,112,5,42,0,0,112,
        113,5,42,0,0,113,114,5,42,0,0,114,12,1,0,0,0,115,117,5,13,0,0,116,
        115,1,0,0,0,116,117,1,0,0,0,117,118,1,0,0,0,118,119,5,10,0,0,119,
        14,1,0,0,0,120,121,5,111,0,0,121,16,1,0,0,0,122,123,5,120,0,0,123,
        18,1,0,0,0,124,125,5,50,0,0,125,126,3,81,40,0,126,127,3,81,40,0,
        127,128,3,81,40,0,128,129,3,39,19,0,129,130,3,85,42,0,130,131,3,
        81,40,0,131,132,3,39,19,0,132,133,3,83,41,0,133,134,3,81,40,0,134,
        20,1,0,0,0,135,136,2,48,50,0,136,137,3,81,40,0,137,138,2,48,53,0,
        138,139,3,81,40,0,139,22,1,0,0,0,140,145,3,89,44,0,141,144,3,89,
        44,0,142,144,3,45,22,0,143,141,1,0,0,0,143,142,1,0,0,0,144,147,1,
        0,0,0,145,143,1,0,0,0,145,146,1,0,0,0,146,24,1,0,0,0,147,145,1,0,
        0,0,148,149,3,27,13,0,149,150,3,55,27,0,150,151,3,79,39,0,151,153,
        3,79,39,0,152,154,3,79,39,0,153,152,1,0,0,0,153,154,1,0,0,0,154,
        26,1,0,0,0,155,156,3,81,40,0,156,157,3,81,40,0,157,158,3,85,42,0,
        158,159,3,81,40,0,159,160,3,83,41,0,160,161,3,81,40,0,161,28,1,0,
        0,0,162,167,3,81,40,0,163,166,3,89,44,0,164,166,3,45,22,0,165,163,
        1,0,0,0,165,164,1,0,0,0,166,169,1,0,0,0,167,165,1,0,0,0,167,168,
        1,0,0,0,168,30,1,0,0,0,169,167,1,0,0,0,170,171,5,32,0,0,171,172,
        5,32,0,0,172,173,5,45,0,0,173,32,1,0,0,0,174,175,5,32,0,0,175,176,
        5,32,0,0,176,177,5,32,0,0,177,178,5,32,0,0,178,179,5,45,0,0,179,
        34,1,0,0,0,180,181,7,0,0,0,181,36,1,0,0,0,182,183,5,94,0,0,183,38,
        1,0,0,0,184,185,5,45,0,0,185,40,1,0,0,0,186,187,5,46,0,0,187,42,
        1,0,0,0,188,189,5,47,0,0,189,44,1,0,0,0,190,191,5,95,0,0,191,46,
        1,0,0,0,192,193,5,58,0,0,193,48,1,0,0,0,194,195,5,32,0,0,195,50,
        1,0,0,0,196,197,5,40,0,0,197,52,1,0,0,0,198,199,5,41,0,0,199,54,
        1,0,0,0,200,201,5,35,0,0,201,56,1,0,0,0,202,203,5,64,0,0,203,58,
        1,0,0,0,204,205,5,43,0,0,205,60,1,0,0,0,206,207,5,37,0,0,207,62,
        1,0,0,0,208,209,5,39,0,0,209,64,1,0,0,0,210,211,5,34,0,0,211,66,
        1,0,0,0,212,213,5,126,0,0,213,68,1,0,0,0,214,215,5,42,0,0,215,70,
        1,0,0,0,216,217,5,60,0,0,217,72,1,0,0,0,218,219,5,62,0,0,219,74,
        1,0,0,0,220,221,2,65,90,0,221,76,1,0,0,0,222,223,2,97,122,0,223,
        78,1,0,0,0,224,227,3,81,40,0,225,227,7,1,0,0,226,224,1,0,0,0,226,
        225,1,0,0,0,227,80,1,0,0,0,228,229,2,48,57,0,229,82,1,0,0,0,230,
        231,2,48,51,0,231,84,1,0,0,0,232,233,2,48,49,0,233,86,1,0,0,0,234,
        237,3,75,37,0,235,237,3,77,38,0,236,234,1,0,0,0,236,235,1,0,0,0,
        237,88,1,0,0,0,238,241,3,87,43,0,239,241,3,81,40,0,240,238,1,0,0,
        0,240,239,1,0,0,0,241,90,1,0,0,0,10,0,116,143,145,153,165,167,226,
        236,240,0
    ]

class ZorgFileLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    NL = 7
    LOWER_O = 8
    LOWER_X = 9
    DATE = 10
    TIME = 11
    ID = 12
    ZID = 13
    SHORT_DATE = 14
    NUM_ID = 15
    TWO_SPACE_DASH = 16
    FOUR_SPACE_DASH = 17
    SYMBOL = 18
    HAT = 19
    DASH = 20
    DOT = 21
    FSLASH = 22
    UNDERSCORE = 23
    COLON = 24
    SPACE = 25
    LPAREN = 26
    RPAREN = 27
    HASH = 28
    AT_SIGN = 29
    PLUS = 30
    PERCENT = 31
    SQUOTE = 32
    DQUOTE = 33
    TILDE = 34
    STAR = 35
    LANGLE = 36
    RANGLE = 37

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'['", "']'", "'[['", "']]'", "'======='", "'*****'", "'o'", 
            "'x'", "'  -'", "'    -'", "'^'", "'-'", "'.'", "'/'", "'_'", 
            "':'", "' '", "'('", "')'", "'#'", "'@'", "'+'", "'%'", "'''", 
            "'\"'", "'~'", "'*'", "'<'", "'>'" ]

    symbolicNames = [ "<INVALID>",
            "NL", "LOWER_O", "LOWER_X", "DATE", "TIME", "ID", "ZID", "SHORT_DATE", 
            "NUM_ID", "TWO_SPACE_DASH", "FOUR_SPACE_DASH", "SYMBOL", "HAT", 
            "DASH", "DOT", "FSLASH", "UNDERSCORE", "COLON", "SPACE", "LPAREN", 
            "RPAREN", "HASH", "AT_SIGN", "PLUS", "PERCENT", "SQUOTE", "DQUOTE", 
            "TILDE", "STAR", "LANGLE", "RANGLE" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "NL", 
                  "LOWER_O", "LOWER_X", "DATE", "TIME", "ID", "ZID", "SHORT_DATE", 
                  "NUM_ID", "TWO_SPACE_DASH", "FOUR_SPACE_DASH", "SYMBOL", 
                  "HAT", "DASH", "DOT", "FSLASH", "UNDERSCORE", "COLON", 
                  "SPACE", "LPAREN", "RPAREN", "HASH", "AT_SIGN", "PLUS", 
                  "PERCENT", "SQUOTE", "DQUOTE", "TILDE", "STAR", "LANGLE", 
                  "RANGLE", "UPPER_LETTER", "LOWER_LETTER", "ZID_CHAR", 
                  "NUM", "FIRST_D_NUM", "FIRST_M_NUM", "ALPHA", "ALPHANUM" ]

    grammarFileName = "ZorgFile.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


