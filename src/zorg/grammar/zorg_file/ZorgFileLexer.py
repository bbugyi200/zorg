# Generated from ZorgFile.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,50,374,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,1,0,1,
        0,1,0,1,1,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,4,1,5,1,5,1,5,1,6,1,
        6,1,6,1,7,1,7,1,7,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,
        9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,12,3,
        12,164,8,12,1,12,1,12,1,13,1,13,1,14,1,14,1,15,1,15,1,15,1,15,1,
        15,1,15,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,17,1,
        17,1,17,1,18,1,18,1,18,5,18,194,8,18,10,18,12,18,197,9,18,1,19,1,
        19,1,19,1,19,1,19,3,19,204,8,19,1,20,1,20,1,20,5,20,209,8,20,10,
        20,12,20,212,9,20,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,
        22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,
        22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,
        22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,
        23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,
        23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,
        24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,
        25,1,25,1,25,1,25,1,26,1,26,1,27,1,27,1,28,1,28,1,29,1,29,1,30,1,
        30,1,31,1,31,1,32,1,32,1,33,1,33,1,34,1,34,1,35,1,35,1,36,1,36,1,
        37,1,37,1,38,1,38,1,39,1,39,1,40,1,40,1,41,1,41,1,42,1,42,1,43,1,
        43,1,44,1,44,1,45,1,45,1,46,1,46,1,47,1,47,1,48,1,48,1,49,1,49,1,
        50,1,50,1,51,1,51,1,52,1,52,3,52,359,8,52,1,53,1,53,1,54,1,54,1,
        55,1,55,1,56,1,56,3,56,369,8,56,1,57,1,57,3,57,373,8,57,0,0,58,1,
        1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,
        14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,
        25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,
        36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,
        47,95,48,97,49,99,50,101,0,103,0,105,0,107,0,109,0,111,0,113,0,115,
        0,1,0,2,6,0,33,33,44,44,59,59,91,93,96,96,123,125,6,0,65,72,74,78,
        80,90,97,105,107,107,109,122,374,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,
        0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,
        0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,
        0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,
        0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,
        0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,
        0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,
        0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,
        0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,
        0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,
        0,0,97,1,0,0,0,0,99,1,0,0,0,1,117,1,0,0,0,3,120,1,0,0,0,5,123,1,
        0,0,0,7,125,1,0,0,0,9,127,1,0,0,0,11,130,1,0,0,0,13,133,1,0,0,0,
        15,136,1,0,0,0,17,139,1,0,0,0,19,142,1,0,0,0,21,151,1,0,0,0,23,159,
        1,0,0,0,25,163,1,0,0,0,27,167,1,0,0,0,29,169,1,0,0,0,31,171,1,0,
        0,0,33,182,1,0,0,0,35,187,1,0,0,0,37,190,1,0,0,0,39,198,1,0,0,0,
        41,205,1,0,0,0,43,213,1,0,0,0,45,220,1,0,0,0,47,253,1,0,0,0,49,278,
        1,0,0,0,51,295,1,0,0,0,53,304,1,0,0,0,55,306,1,0,0,0,57,308,1,0,
        0,0,59,310,1,0,0,0,61,312,1,0,0,0,63,314,1,0,0,0,65,316,1,0,0,0,
        67,318,1,0,0,0,69,320,1,0,0,0,71,322,1,0,0,0,73,324,1,0,0,0,75,326,
        1,0,0,0,77,328,1,0,0,0,79,330,1,0,0,0,81,332,1,0,0,0,83,334,1,0,
        0,0,85,336,1,0,0,0,87,338,1,0,0,0,89,340,1,0,0,0,91,342,1,0,0,0,
        93,344,1,0,0,0,95,346,1,0,0,0,97,348,1,0,0,0,99,350,1,0,0,0,101,
        352,1,0,0,0,103,354,1,0,0,0,105,358,1,0,0,0,107,360,1,0,0,0,109,
        362,1,0,0,0,111,364,1,0,0,0,113,368,1,0,0,0,115,372,1,0,0,0,117,
        118,5,91,0,0,118,119,5,91,0,0,119,2,1,0,0,0,120,121,5,93,0,0,121,
        122,5,93,0,0,122,4,1,0,0,0,123,124,5,91,0,0,124,6,1,0,0,0,125,126,
        5,93,0,0,126,8,1,0,0,0,127,128,5,91,0,0,128,129,5,35,0,0,129,10,
        1,0,0,0,130,131,5,91,0,0,131,132,5,94,0,0,132,12,1,0,0,0,133,134,
        5,40,0,0,134,135,5,40,0,0,135,14,1,0,0,0,136,137,5,41,0,0,137,138,
        5,41,0,0,138,16,1,0,0,0,139,140,5,91,0,0,140,141,5,64,0,0,141,18,
        1,0,0,0,142,143,5,104,0,0,143,144,5,116,0,0,144,145,5,116,0,0,145,
        146,5,112,0,0,146,147,5,115,0,0,147,148,5,58,0,0,148,149,5,47,0,
        0,149,150,5,47,0,0,150,20,1,0,0,0,151,152,5,104,0,0,152,153,5,116,
        0,0,153,154,5,116,0,0,154,155,5,112,0,0,155,156,5,58,0,0,156,157,
        5,47,0,0,157,158,5,47,0,0,158,22,1,0,0,0,159,160,5,37,0,0,160,161,
        5,115,0,0,161,24,1,0,0,0,162,164,5,13,0,0,163,162,1,0,0,0,163,164,
        1,0,0,0,164,165,1,0,0,0,165,166,5,10,0,0,166,26,1,0,0,0,167,168,
        5,111,0,0,168,28,1,0,0,0,169,170,5,120,0,0,170,30,1,0,0,0,171,172,
        5,50,0,0,172,173,3,107,53,0,173,174,3,107,53,0,174,175,3,107,53,
        0,175,176,3,65,32,0,176,177,3,111,55,0,177,178,3,107,53,0,178,179,
        3,65,32,0,179,180,3,109,54,0,180,181,3,107,53,0,181,32,1,0,0,0,182,
        183,2,48,50,0,183,184,3,107,53,0,184,185,2,48,53,0,185,186,3,107,
        53,0,186,34,1,0,0,0,187,188,5,80,0,0,188,189,3,107,53,0,189,36,1,
        0,0,0,190,195,3,115,57,0,191,194,3,115,57,0,192,194,3,71,35,0,193,
        191,1,0,0,0,193,192,1,0,0,0,194,197,1,0,0,0,195,193,1,0,0,0,195,
        196,1,0,0,0,196,38,1,0,0,0,197,195,1,0,0,0,198,199,3,43,21,0,199,
        200,3,79,39,0,200,201,3,105,52,0,201,203,3,105,52,0,202,204,3,105,
        52,0,203,202,1,0,0,0,203,204,1,0,0,0,204,40,1,0,0,0,205,210,3,107,
        53,0,206,209,3,115,57,0,207,209,3,71,35,0,208,206,1,0,0,0,208,207,
        1,0,0,0,209,212,1,0,0,0,210,208,1,0,0,0,210,211,1,0,0,0,211,42,1,
        0,0,0,212,210,1,0,0,0,213,214,3,107,53,0,214,215,3,107,53,0,215,
        216,3,111,55,0,216,217,3,107,53,0,217,218,3,109,54,0,218,219,3,107,
        53,0,219,44,1,0,0,0,220,221,5,35,0,0,221,222,5,35,0,0,222,223,5,
        35,0,0,223,224,5,35,0,0,224,225,5,35,0,0,225,226,5,35,0,0,226,227,
        5,35,0,0,227,228,5,35,0,0,228,229,5,35,0,0,229,230,5,35,0,0,230,
        231,5,35,0,0,231,232,5,35,0,0,232,233,5,35,0,0,233,234,5,35,0,0,
        234,235,5,35,0,0,235,236,5,35,0,0,236,237,5,35,0,0,237,238,5,35,
        0,0,238,239,5,35,0,0,239,240,5,35,0,0,240,241,5,35,0,0,241,242,5,
        35,0,0,242,243,5,35,0,0,243,244,5,35,0,0,244,245,5,35,0,0,245,246,
        5,35,0,0,246,247,5,35,0,0,247,248,5,35,0,0,248,249,5,35,0,0,249,
        250,5,35,0,0,250,251,5,35,0,0,251,252,5,35,0,0,252,46,1,0,0,0,253,
        254,5,61,0,0,254,255,5,61,0,0,255,256,5,61,0,0,256,257,5,61,0,0,
        257,258,5,61,0,0,258,259,5,61,0,0,259,260,5,61,0,0,260,261,5,61,
        0,0,261,262,5,61,0,0,262,263,5,61,0,0,263,264,5,61,0,0,264,265,5,
        61,0,0,265,266,5,61,0,0,266,267,5,61,0,0,267,268,5,61,0,0,268,269,
        5,61,0,0,269,270,5,61,0,0,270,271,5,61,0,0,271,272,5,61,0,0,272,
        273,5,61,0,0,273,274,5,61,0,0,274,275,5,61,0,0,275,276,5,61,0,0,
        276,277,5,61,0,0,277,48,1,0,0,0,278,279,5,43,0,0,279,280,5,43,0,
        0,280,281,5,43,0,0,281,282,5,43,0,0,282,283,5,43,0,0,283,284,5,43,
        0,0,284,285,5,43,0,0,285,286,5,43,0,0,286,287,5,43,0,0,287,288,5,
        43,0,0,288,289,5,43,0,0,289,290,5,43,0,0,290,291,5,43,0,0,291,292,
        5,43,0,0,292,293,5,43,0,0,293,294,5,43,0,0,294,50,1,0,0,0,295,296,
        5,45,0,0,296,297,5,45,0,0,297,298,5,45,0,0,298,299,5,45,0,0,299,
        300,5,45,0,0,300,301,5,45,0,0,301,302,5,45,0,0,302,303,5,45,0,0,
        303,52,1,0,0,0,304,305,7,0,0,0,305,54,1,0,0,0,306,307,5,38,0,0,307,
        56,1,0,0,0,308,309,5,61,0,0,309,58,1,0,0,0,310,311,5,63,0,0,311,
        60,1,0,0,0,312,313,5,36,0,0,313,62,1,0,0,0,314,315,5,94,0,0,315,
        64,1,0,0,0,316,317,5,45,0,0,317,66,1,0,0,0,318,319,5,46,0,0,319,
        68,1,0,0,0,320,321,5,47,0,0,321,70,1,0,0,0,322,323,5,95,0,0,323,
        72,1,0,0,0,324,325,5,32,0,0,325,74,1,0,0,0,326,327,5,40,0,0,327,
        76,1,0,0,0,328,329,5,41,0,0,329,78,1,0,0,0,330,331,5,35,0,0,331,
        80,1,0,0,0,332,333,5,64,0,0,333,82,1,0,0,0,334,335,5,43,0,0,335,
        84,1,0,0,0,336,337,5,37,0,0,337,86,1,0,0,0,338,339,5,39,0,0,339,
        88,1,0,0,0,340,341,5,34,0,0,341,90,1,0,0,0,342,343,5,126,0,0,343,
        92,1,0,0,0,344,345,5,42,0,0,345,94,1,0,0,0,346,347,5,60,0,0,347,
        96,1,0,0,0,348,349,5,62,0,0,349,98,1,0,0,0,350,351,5,58,0,0,351,
        100,1,0,0,0,352,353,2,65,90,0,353,102,1,0,0,0,354,355,2,97,122,0,
        355,104,1,0,0,0,356,359,3,107,53,0,357,359,7,1,0,0,358,356,1,0,0,
        0,358,357,1,0,0,0,359,106,1,0,0,0,360,361,2,48,57,0,361,108,1,0,
        0,0,362,363,2,48,51,0,363,110,1,0,0,0,364,365,2,48,49,0,365,112,
        1,0,0,0,366,369,3,101,50,0,367,369,3,103,51,0,368,366,1,0,0,0,368,
        367,1,0,0,0,369,114,1,0,0,0,370,373,3,113,56,0,371,373,3,107,53,
        0,372,370,1,0,0,0,372,371,1,0,0,0,373,116,1,0,0,0,10,0,163,193,195,
        203,208,210,358,368,372,0
    ]

class ZorgFileLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    NL = 13
    LOWER_O = 14
    LOWER_X = 15
    DATE = 16
    TIME = 17
    PRIORITY = 18
    ID = 19
    ZID = 20
    NUM_ID = 21
    SHORT_DATE = 22
    H1_HEADER = 23
    H2_HEADER = 24
    H3_HEADER = 25
    H4_HEADER = 26
    SYMBOL = 27
    AMP = 28
    EQUAL = 29
    QMARK = 30
    DOLLAR = 31
    HAT = 32
    DASH = 33
    DOT = 34
    FSLASH = 35
    UNDERSCORE = 36
    SPACE = 37
    LPAREN = 38
    RPAREN = 39
    HASH = 40
    AT_SIGN = 41
    PLUS = 42
    PERCENT = 43
    SQUOTE = 44
    DQUOTE = 45
    TILDE = 46
    STAR = 47
    LANGLE = 48
    RANGLE = 49
    COLON = 50

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'[['", "']]'", "'['", "']'", "'[#'", "'[^'", "'(('", "'))'", 
            "'[@'", "'https://'", "'http://'", "'%s'", "'o'", "'x'", "'################################'", 
            "'========================'", "'++++++++++++++++'", "'--------'", 
            "'&'", "'='", "'?'", "'$'", "'^'", "'-'", "'.'", "'/'", "'_'", 
            "' '", "'('", "')'", "'#'", "'@'", "'+'", "'%'", "'''", "'\"'", 
            "'~'", "'*'", "'<'", "'>'", "':'" ]

    symbolicNames = [ "<INVALID>",
            "NL", "LOWER_O", "LOWER_X", "DATE", "TIME", "PRIORITY", "ID", 
            "ZID", "NUM_ID", "SHORT_DATE", "H1_HEADER", "H2_HEADER", "H3_HEADER", 
            "H4_HEADER", "SYMBOL", "AMP", "EQUAL", "QMARK", "DOLLAR", "HAT", 
            "DASH", "DOT", "FSLASH", "UNDERSCORE", "SPACE", "LPAREN", "RPAREN", 
            "HASH", "AT_SIGN", "PLUS", "PERCENT", "SQUOTE", "DQUOTE", "TILDE", 
            "STAR", "LANGLE", "RANGLE", "COLON" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "NL", "LOWER_O", 
                  "LOWER_X", "DATE", "TIME", "PRIORITY", "ID", "ZID", "NUM_ID", 
                  "SHORT_DATE", "H1_HEADER", "H2_HEADER", "H3_HEADER", "H4_HEADER", 
                  "SYMBOL", "AMP", "EQUAL", "QMARK", "DOLLAR", "HAT", "DASH", 
                  "DOT", "FSLASH", "UNDERSCORE", "SPACE", "LPAREN", "RPAREN", 
                  "HASH", "AT_SIGN", "PLUS", "PERCENT", "SQUOTE", "DQUOTE", 
                  "TILDE", "STAR", "LANGLE", "RANGLE", "COLON", "UPPER_LETTER", 
                  "LOWER_LETTER", "ZID_CHAR", "NUM", "FIRST_D_NUM", "FIRST_M_NUM", 
                  "ALPHA", "ALPHANUM" ]

    grammarFileName = "ZorgFile.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


