# Generated from ZorgFile.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,42,266,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,1,0,1,0,1,0,1,1,1,1,1,
        1,1,2,1,2,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,
        5,1,5,1,5,1,6,3,6,127,8,6,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,9,1,
        9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,11,1,11,
        1,11,1,12,1,12,1,12,1,13,1,13,1,13,1,14,1,14,1,14,1,15,1,15,1,15,
        5,15,166,8,15,10,15,12,15,169,9,15,1,16,1,16,1,16,1,16,1,16,3,16,
        176,8,16,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,5,18,
        188,8,18,10,18,12,18,191,9,18,1,19,1,19,1,19,1,19,1,20,1,20,1,20,
        1,20,1,20,1,20,1,21,1,21,1,22,1,22,1,23,1,23,1,24,1,24,1,25,1,25,
        1,26,1,26,1,27,1,27,1,28,1,28,1,29,1,29,1,30,1,30,1,31,1,31,1,32,
        1,32,1,33,1,33,1,34,1,34,1,35,1,35,1,36,1,36,1,37,1,37,1,38,1,38,
        1,39,1,39,1,40,1,40,1,41,1,41,1,42,1,42,1,43,1,43,1,44,1,44,3,44,
        251,8,44,1,45,1,45,1,46,1,46,1,47,1,47,1,48,1,48,3,48,261,8,48,1,
        49,1,49,3,49,265,8,49,0,0,50,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,
        17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,
        39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,
        61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,
        83,42,85,0,87,0,89,0,91,0,93,0,95,0,97,0,99,0,1,0,2,9,0,33,33,38,
        38,44,44,59,59,61,61,63,63,91,93,96,96,123,125,6,0,65,72,74,78,80,
        90,97,105,107,107,109,122,266,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,
        0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,
        0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,
        0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,
        0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,
        0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,
        0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,
        0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,
        0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,1,101,1,0,0,
        0,3,104,1,0,0,0,5,107,1,0,0,0,7,109,1,0,0,0,9,111,1,0,0,0,11,119,
        1,0,0,0,13,126,1,0,0,0,15,130,1,0,0,0,17,132,1,0,0,0,19,134,1,0,
        0,0,21,145,1,0,0,0,23,150,1,0,0,0,25,153,1,0,0,0,27,156,1,0,0,0,
        29,159,1,0,0,0,31,162,1,0,0,0,33,170,1,0,0,0,35,177,1,0,0,0,37,184,
        1,0,0,0,39,192,1,0,0,0,41,196,1,0,0,0,43,202,1,0,0,0,45,204,1,0,
        0,0,47,206,1,0,0,0,49,208,1,0,0,0,51,210,1,0,0,0,53,212,1,0,0,0,
        55,214,1,0,0,0,57,216,1,0,0,0,59,218,1,0,0,0,61,220,1,0,0,0,63,222,
        1,0,0,0,65,224,1,0,0,0,67,226,1,0,0,0,69,228,1,0,0,0,71,230,1,0,
        0,0,73,232,1,0,0,0,75,234,1,0,0,0,77,236,1,0,0,0,79,238,1,0,0,0,
        81,240,1,0,0,0,83,242,1,0,0,0,85,244,1,0,0,0,87,246,1,0,0,0,89,250,
        1,0,0,0,91,252,1,0,0,0,93,254,1,0,0,0,95,256,1,0,0,0,97,260,1,0,
        0,0,99,264,1,0,0,0,101,102,5,91,0,0,102,103,5,91,0,0,103,2,1,0,0,
        0,104,105,5,93,0,0,105,106,5,93,0,0,106,4,1,0,0,0,107,108,5,91,0,
        0,108,6,1,0,0,0,109,110,5,93,0,0,110,8,1,0,0,0,111,112,5,61,0,0,
        112,113,5,61,0,0,113,114,5,61,0,0,114,115,5,61,0,0,115,116,5,61,
        0,0,116,117,5,61,0,0,117,118,5,61,0,0,118,10,1,0,0,0,119,120,5,42,
        0,0,120,121,5,42,0,0,121,122,5,42,0,0,122,123,5,42,0,0,123,124,5,
        42,0,0,124,12,1,0,0,0,125,127,5,13,0,0,126,125,1,0,0,0,126,127,1,
        0,0,0,127,128,1,0,0,0,128,129,5,10,0,0,129,14,1,0,0,0,130,131,5,
        111,0,0,131,16,1,0,0,0,132,133,5,120,0,0,133,18,1,0,0,0,134,135,
        5,50,0,0,135,136,3,91,45,0,136,137,3,91,45,0,137,138,3,91,45,0,138,
        139,3,49,24,0,139,140,3,95,47,0,140,141,3,91,45,0,141,142,3,49,24,
        0,142,143,3,93,46,0,143,144,3,91,45,0,144,20,1,0,0,0,145,146,2,48,
        50,0,146,147,3,91,45,0,147,148,2,48,53,0,148,149,3,91,45,0,149,22,
        1,0,0,0,150,151,3,47,23,0,151,152,3,35,17,0,152,24,1,0,0,0,153,154,
        3,45,22,0,154,155,3,35,17,0,155,26,1,0,0,0,156,157,3,83,41,0,157,
        158,3,35,17,0,158,28,1,0,0,0,159,160,5,80,0,0,160,161,3,91,45,0,
        161,30,1,0,0,0,162,167,3,99,49,0,163,166,3,99,49,0,164,166,3,55,
        27,0,165,163,1,0,0,0,165,164,1,0,0,0,166,169,1,0,0,0,167,165,1,0,
        0,0,167,168,1,0,0,0,168,32,1,0,0,0,169,167,1,0,0,0,170,171,3,35,
        17,0,171,172,3,63,31,0,172,173,3,89,44,0,173,175,3,89,44,0,174,176,
        3,89,44,0,175,174,1,0,0,0,175,176,1,0,0,0,176,34,1,0,0,0,177,178,
        3,91,45,0,178,179,3,91,45,0,179,180,3,95,47,0,180,181,3,91,45,0,
        181,182,3,93,46,0,182,183,3,91,45,0,183,36,1,0,0,0,184,189,3,91,
        45,0,185,188,3,99,49,0,186,188,3,55,27,0,187,185,1,0,0,0,187,186,
        1,0,0,0,188,191,1,0,0,0,189,187,1,0,0,0,189,190,1,0,0,0,190,38,1,
        0,0,0,191,189,1,0,0,0,192,193,5,32,0,0,193,194,5,32,0,0,194,195,
        5,45,0,0,195,40,1,0,0,0,196,197,5,32,0,0,197,198,5,32,0,0,198,199,
        5,32,0,0,199,200,5,32,0,0,200,201,5,45,0,0,201,42,1,0,0,0,202,203,
        7,0,0,0,203,44,1,0,0,0,204,205,5,36,0,0,205,46,1,0,0,0,206,207,5,
        94,0,0,207,48,1,0,0,0,208,209,5,45,0,0,209,50,1,0,0,0,210,211,5,
        46,0,0,211,52,1,0,0,0,212,213,5,47,0,0,213,54,1,0,0,0,214,215,5,
        95,0,0,215,56,1,0,0,0,216,217,5,32,0,0,217,58,1,0,0,0,218,219,5,
        40,0,0,219,60,1,0,0,0,220,221,5,41,0,0,221,62,1,0,0,0,222,223,5,
        35,0,0,223,64,1,0,0,0,224,225,5,64,0,0,225,66,1,0,0,0,226,227,5,
        43,0,0,227,68,1,0,0,0,228,229,5,37,0,0,229,70,1,0,0,0,230,231,5,
        39,0,0,231,72,1,0,0,0,232,233,5,34,0,0,233,74,1,0,0,0,234,235,5,
        126,0,0,235,76,1,0,0,0,236,237,5,42,0,0,237,78,1,0,0,0,238,239,5,
        60,0,0,239,80,1,0,0,0,240,241,5,62,0,0,241,82,1,0,0,0,242,243,5,
        58,0,0,243,84,1,0,0,0,244,245,2,65,90,0,245,86,1,0,0,0,246,247,2,
        97,122,0,247,88,1,0,0,0,248,251,3,91,45,0,249,251,7,1,0,0,250,248,
        1,0,0,0,250,249,1,0,0,0,251,90,1,0,0,0,252,253,2,48,57,0,253,92,
        1,0,0,0,254,255,2,48,51,0,255,94,1,0,0,0,256,257,2,48,49,0,257,96,
        1,0,0,0,258,261,3,85,42,0,259,261,3,87,43,0,260,258,1,0,0,0,260,
        259,1,0,0,0,261,98,1,0,0,0,262,265,3,97,48,0,263,265,3,91,45,0,264,
        262,1,0,0,0,264,263,1,0,0,0,265,100,1,0,0,0,10,0,126,165,167,175,
        187,189,250,260,264,0
    ]

class ZorgFileLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    NL = 7
    LOWER_O = 8
    LOWER_X = 9
    DATE = 10
    TIME = 11
    CREATE_RANGE_HEAD = 12
    MODIFY_RANGE_HEAD = 13
    DATE_RANGE_TAIL = 14
    PRIORITY = 15
    ID = 16
    ZID = 17
    SHORT_DATE = 18
    NUM_ID = 19
    TWO_SPACE_DASH = 20
    FOUR_SPACE_DASH = 21
    SYMBOL = 22
    DOLLAR = 23
    HAT = 24
    DASH = 25
    DOT = 26
    FSLASH = 27
    UNDERSCORE = 28
    SPACE = 29
    LPAREN = 30
    RPAREN = 31
    HASH = 32
    AT_SIGN = 33
    PLUS = 34
    PERCENT = 35
    SQUOTE = 36
    DQUOTE = 37
    TILDE = 38
    STAR = 39
    LANGLE = 40
    RANGLE = 41
    COLON = 42

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'[['", "']]'", "'['", "']'", "'======='", "'*****'", "'o'", 
            "'x'", "'  -'", "'    -'", "'$'", "'^'", "'-'", "'.'", "'/'", 
            "'_'", "' '", "'('", "')'", "'#'", "'@'", "'+'", "'%'", "'''", 
            "'\"'", "'~'", "'*'", "'<'", "'>'", "':'" ]

    symbolicNames = [ "<INVALID>",
            "NL", "LOWER_O", "LOWER_X", "DATE", "TIME", "CREATE_RANGE_HEAD", 
            "MODIFY_RANGE_HEAD", "DATE_RANGE_TAIL", "PRIORITY", "ID", "ZID", 
            "SHORT_DATE", "NUM_ID", "TWO_SPACE_DASH", "FOUR_SPACE_DASH", 
            "SYMBOL", "DOLLAR", "HAT", "DASH", "DOT", "FSLASH", "UNDERSCORE", 
            "SPACE", "LPAREN", "RPAREN", "HASH", "AT_SIGN", "PLUS", "PERCENT", 
            "SQUOTE", "DQUOTE", "TILDE", "STAR", "LANGLE", "RANGLE", "COLON" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "NL", 
                  "LOWER_O", "LOWER_X", "DATE", "TIME", "CREATE_RANGE_HEAD", 
                  "MODIFY_RANGE_HEAD", "DATE_RANGE_TAIL", "PRIORITY", "ID", 
                  "ZID", "SHORT_DATE", "NUM_ID", "TWO_SPACE_DASH", "FOUR_SPACE_DASH", 
                  "SYMBOL", "DOLLAR", "HAT", "DASH", "DOT", "FSLASH", "UNDERSCORE", 
                  "SPACE", "LPAREN", "RPAREN", "HASH", "AT_SIGN", "PLUS", 
                  "PERCENT", "SQUOTE", "DQUOTE", "TILDE", "STAR", "LANGLE", 
                  "RANGLE", "COLON", "UPPER_LETTER", "LOWER_LETTER", "ZID_CHAR", 
                  "NUM", "FIRST_D_NUM", "FIRST_M_NUM", "ALPHA", "ALPHANUM" ]

    grammarFileName = "ZorgFile.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


