# Generated from ZorgFile.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,49,373,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,1,0,1,0,1,1,1,1,
        1,2,1,2,1,2,1,3,1,3,1,3,1,4,1,4,1,4,1,5,1,5,1,5,1,6,1,6,1,6,1,7,
        3,7,136,8,7,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,
        1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,
        1,13,1,13,1,13,1,14,1,14,1,14,1,15,1,15,1,15,1,16,1,16,1,16,5,16,
        175,8,16,10,16,12,16,178,9,16,1,17,1,17,1,17,1,17,1,17,3,17,185,
        8,17,1,18,1,18,3,18,189,8,18,1,19,1,19,1,19,1,19,1,19,1,19,1,19,
        1,20,3,20,199,8,20,1,20,4,20,202,8,20,11,20,12,20,203,1,20,1,20,
        1,21,1,21,1,21,5,21,211,8,21,10,21,12,21,214,9,21,1,22,1,22,1,22,
        1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,
        1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,
        1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,
        1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,
        1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,
        1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,
        1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,27,1,27,
        1,28,1,28,1,29,1,29,1,30,1,30,1,31,1,31,1,32,1,32,1,33,1,33,1,34,
        1,34,1,35,1,35,1,36,1,36,1,37,1,37,1,38,1,38,1,39,1,39,1,40,1,40,
        1,41,1,41,1,42,1,42,1,43,1,43,1,44,1,44,1,45,1,45,1,46,1,46,1,47,
        1,47,1,48,1,48,1,49,1,49,1,50,1,50,1,51,1,51,3,51,358,8,51,1,52,
        1,52,1,53,1,53,1,54,1,54,1,55,1,55,3,55,368,8,55,1,56,1,56,3,56,
        372,8,56,0,0,57,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,
        11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,
        22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,
        33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,
        44,89,45,91,46,93,47,95,48,97,49,99,0,101,0,103,0,105,0,107,0,109,
        0,111,0,113,0,1,0,3,3,0,100,100,109,109,121,121,9,0,33,33,38,38,
        44,44,59,59,61,61,63,63,91,93,96,96,123,125,6,0,65,72,74,78,80,90,
        97,105,107,107,109,122,376,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,
        7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,
        1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,
        1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,
        1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,
        1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,
        1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,
        1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,
        1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,
        1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,
        1,0,0,0,1,115,1,0,0,0,3,117,1,0,0,0,5,119,1,0,0,0,7,122,1,0,0,0,
        9,125,1,0,0,0,11,128,1,0,0,0,13,131,1,0,0,0,15,135,1,0,0,0,17,139,
        1,0,0,0,19,141,1,0,0,0,21,143,1,0,0,0,23,154,1,0,0,0,25,159,1,0,
        0,0,27,162,1,0,0,0,29,165,1,0,0,0,31,168,1,0,0,0,33,171,1,0,0,0,
        35,179,1,0,0,0,37,188,1,0,0,0,39,190,1,0,0,0,41,198,1,0,0,0,43,207,
        1,0,0,0,45,215,1,0,0,0,47,248,1,0,0,0,49,273,1,0,0,0,51,290,1,0,
        0,0,53,299,1,0,0,0,55,303,1,0,0,0,57,309,1,0,0,0,59,311,1,0,0,0,
        61,313,1,0,0,0,63,315,1,0,0,0,65,317,1,0,0,0,67,319,1,0,0,0,69,321,
        1,0,0,0,71,323,1,0,0,0,73,325,1,0,0,0,75,327,1,0,0,0,77,329,1,0,
        0,0,79,331,1,0,0,0,81,333,1,0,0,0,83,335,1,0,0,0,85,337,1,0,0,0,
        87,339,1,0,0,0,89,341,1,0,0,0,91,343,1,0,0,0,93,345,1,0,0,0,95,347,
        1,0,0,0,97,349,1,0,0,0,99,351,1,0,0,0,101,353,1,0,0,0,103,357,1,
        0,0,0,105,359,1,0,0,0,107,361,1,0,0,0,109,363,1,0,0,0,111,367,1,
        0,0,0,113,371,1,0,0,0,115,116,5,91,0,0,116,2,1,0,0,0,117,118,5,93,
        0,0,118,4,1,0,0,0,119,120,5,91,0,0,120,121,5,91,0,0,121,6,1,0,0,
        0,122,123,5,93,0,0,123,124,5,93,0,0,124,8,1,0,0,0,125,126,5,91,0,
        0,126,127,5,35,0,0,127,10,1,0,0,0,128,129,5,91,0,0,129,130,5,40,
        0,0,130,12,1,0,0,0,131,132,5,41,0,0,132,133,5,93,0,0,133,14,1,0,
        0,0,134,136,5,13,0,0,135,134,1,0,0,0,135,136,1,0,0,0,136,137,1,0,
        0,0,137,138,5,10,0,0,138,16,1,0,0,0,139,140,5,111,0,0,140,18,1,0,
        0,0,141,142,5,120,0,0,142,20,1,0,0,0,143,144,5,50,0,0,144,145,3,
        105,52,0,145,146,3,105,52,0,146,147,3,105,52,0,147,148,3,63,31,0,
        148,149,3,109,54,0,149,150,3,105,52,0,150,151,3,63,31,0,151,152,
        3,107,53,0,152,153,3,105,52,0,153,22,1,0,0,0,154,155,2,48,50,0,155,
        156,3,105,52,0,156,157,2,48,53,0,157,158,3,105,52,0,158,24,1,0,0,
        0,159,160,3,61,30,0,160,161,3,37,18,0,161,26,1,0,0,0,162,163,3,59,
        29,0,163,164,3,37,18,0,164,28,1,0,0,0,165,166,3,97,48,0,166,167,
        3,37,18,0,167,30,1,0,0,0,168,169,5,80,0,0,169,170,3,105,52,0,170,
        32,1,0,0,0,171,176,3,113,56,0,172,175,3,113,56,0,173,175,3,69,34,
        0,174,172,1,0,0,0,174,173,1,0,0,0,175,178,1,0,0,0,176,174,1,0,0,
        0,176,177,1,0,0,0,177,34,1,0,0,0,178,176,1,0,0,0,179,180,3,39,19,
        0,180,181,3,77,38,0,181,182,3,103,51,0,182,184,3,103,51,0,183,185,
        3,103,51,0,184,183,1,0,0,0,184,185,1,0,0,0,185,36,1,0,0,0,186,189,
        3,39,19,0,187,189,3,41,20,0,188,186,1,0,0,0,188,187,1,0,0,0,189,
        38,1,0,0,0,190,191,3,105,52,0,191,192,3,105,52,0,192,193,3,109,54,
        0,193,194,3,105,52,0,194,195,3,107,53,0,195,196,3,105,52,0,196,40,
        1,0,0,0,197,199,3,63,31,0,198,197,1,0,0,0,198,199,1,0,0,0,199,201,
        1,0,0,0,200,202,3,105,52,0,201,200,1,0,0,0,202,203,1,0,0,0,203,201,
        1,0,0,0,203,204,1,0,0,0,204,205,1,0,0,0,205,206,7,0,0,0,206,42,1,
        0,0,0,207,212,3,105,52,0,208,211,3,113,56,0,209,211,3,69,34,0,210,
        208,1,0,0,0,210,209,1,0,0,0,211,214,1,0,0,0,212,210,1,0,0,0,212,
        213,1,0,0,0,213,44,1,0,0,0,214,212,1,0,0,0,215,216,5,35,0,0,216,
        217,5,35,0,0,217,218,5,35,0,0,218,219,5,35,0,0,219,220,5,35,0,0,
        220,221,5,35,0,0,221,222,5,35,0,0,222,223,5,35,0,0,223,224,5,35,
        0,0,224,225,5,35,0,0,225,226,5,35,0,0,226,227,5,35,0,0,227,228,5,
        35,0,0,228,229,5,35,0,0,229,230,5,35,0,0,230,231,5,35,0,0,231,232,
        5,35,0,0,232,233,5,35,0,0,233,234,5,35,0,0,234,235,5,35,0,0,235,
        236,5,35,0,0,236,237,5,35,0,0,237,238,5,35,0,0,238,239,5,35,0,0,
        239,240,5,35,0,0,240,241,5,35,0,0,241,242,5,35,0,0,242,243,5,35,
        0,0,243,244,5,35,0,0,244,245,5,35,0,0,245,246,5,35,0,0,246,247,5,
        35,0,0,247,46,1,0,0,0,248,249,5,61,0,0,249,250,5,61,0,0,250,251,
        5,61,0,0,251,252,5,61,0,0,252,253,5,61,0,0,253,254,5,61,0,0,254,
        255,5,61,0,0,255,256,5,61,0,0,256,257,5,61,0,0,257,258,5,61,0,0,
        258,259,5,61,0,0,259,260,5,61,0,0,260,261,5,61,0,0,261,262,5,61,
        0,0,262,263,5,61,0,0,263,264,5,61,0,0,264,265,5,61,0,0,265,266,5,
        61,0,0,266,267,5,61,0,0,267,268,5,61,0,0,268,269,5,61,0,0,269,270,
        5,61,0,0,270,271,5,61,0,0,271,272,5,61,0,0,272,48,1,0,0,0,273,274,
        5,43,0,0,274,275,5,43,0,0,275,276,5,43,0,0,276,277,5,43,0,0,277,
        278,5,43,0,0,278,279,5,43,0,0,279,280,5,43,0,0,280,281,5,43,0,0,
        281,282,5,43,0,0,282,283,5,43,0,0,283,284,5,43,0,0,284,285,5,43,
        0,0,285,286,5,43,0,0,286,287,5,43,0,0,287,288,5,43,0,0,288,289,5,
        43,0,0,289,50,1,0,0,0,290,291,5,45,0,0,291,292,5,45,0,0,292,293,
        5,45,0,0,293,294,5,45,0,0,294,295,5,45,0,0,295,296,5,45,0,0,296,
        297,5,45,0,0,297,298,5,45,0,0,298,52,1,0,0,0,299,300,5,32,0,0,300,
        301,5,32,0,0,301,302,5,45,0,0,302,54,1,0,0,0,303,304,5,32,0,0,304,
        305,5,32,0,0,305,306,5,32,0,0,306,307,5,32,0,0,307,308,5,45,0,0,
        308,56,1,0,0,0,309,310,7,1,0,0,310,58,1,0,0,0,311,312,5,36,0,0,312,
        60,1,0,0,0,313,314,5,94,0,0,314,62,1,0,0,0,315,316,5,45,0,0,316,
        64,1,0,0,0,317,318,5,46,0,0,318,66,1,0,0,0,319,320,5,47,0,0,320,
        68,1,0,0,0,321,322,5,95,0,0,322,70,1,0,0,0,323,324,5,32,0,0,324,
        72,1,0,0,0,325,326,5,40,0,0,326,74,1,0,0,0,327,328,5,41,0,0,328,
        76,1,0,0,0,329,330,5,35,0,0,330,78,1,0,0,0,331,332,5,64,0,0,332,
        80,1,0,0,0,333,334,5,43,0,0,334,82,1,0,0,0,335,336,5,37,0,0,336,
        84,1,0,0,0,337,338,5,39,0,0,338,86,1,0,0,0,339,340,5,34,0,0,340,
        88,1,0,0,0,341,342,5,126,0,0,342,90,1,0,0,0,343,344,5,42,0,0,344,
        92,1,0,0,0,345,346,5,60,0,0,346,94,1,0,0,0,347,348,5,62,0,0,348,
        96,1,0,0,0,349,350,5,58,0,0,350,98,1,0,0,0,351,352,2,65,90,0,352,
        100,1,0,0,0,353,354,2,97,122,0,354,102,1,0,0,0,355,358,3,105,52,
        0,356,358,7,2,0,0,357,355,1,0,0,0,357,356,1,0,0,0,358,104,1,0,0,
        0,359,360,2,48,57,0,360,106,1,0,0,0,361,362,2,48,51,0,362,108,1,
        0,0,0,363,364,2,48,49,0,364,110,1,0,0,0,365,368,3,99,49,0,366,368,
        3,101,50,0,367,365,1,0,0,0,367,366,1,0,0,0,368,112,1,0,0,0,369,372,
        3,111,55,0,370,372,3,105,52,0,371,369,1,0,0,0,371,370,1,0,0,0,372,
        114,1,0,0,0,13,0,135,174,176,184,188,198,203,210,212,357,367,371,
        0
    ]

class ZorgFileLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    NL = 8
    LOWER_O = 9
    LOWER_X = 10
    DATE = 11
    TIME = 12
    CREATE_RANGE_HEAD = 13
    MODIFY_RANGE_HEAD = 14
    DATE_RANGE_TAIL = 15
    PRIORITY = 16
    ID = 17
    ZID = 18
    ZDATE = 19
    SHORT_DATE = 20
    RELATIVE_DATE = 21
    NUM_ID = 22
    H1_HEADER = 23
    H2_HEADER = 24
    H3_HEADER = 25
    H4_HEADER = 26
    TWO_SPACE_DASH = 27
    FOUR_SPACE_DASH = 28
    SYMBOL = 29
    DOLLAR = 30
    HAT = 31
    DASH = 32
    DOT = 33
    FSLASH = 34
    UNDERSCORE = 35
    SPACE = 36
    LPAREN = 37
    RPAREN = 38
    HASH = 39
    AT_SIGN = 40
    PLUS = 41
    PERCENT = 42
    SQUOTE = 43
    DQUOTE = 44
    TILDE = 45
    STAR = 46
    LANGLE = 47
    RANGLE = 48
    COLON = 49

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'['", "']'", "'[['", "']]'", "'[#'", "'[('", "')]'", "'o'", 
            "'x'", "'################################'", "'========================'", 
            "'++++++++++++++++'", "'--------'", "'  -'", "'    -'", "'$'", 
            "'^'", "'-'", "'.'", "'/'", "'_'", "' '", "'('", "')'", "'#'", 
            "'@'", "'+'", "'%'", "'''", "'\"'", "'~'", "'*'", "'<'", "'>'", 
            "':'" ]

    symbolicNames = [ "<INVALID>",
            "NL", "LOWER_O", "LOWER_X", "DATE", "TIME", "CREATE_RANGE_HEAD", 
            "MODIFY_RANGE_HEAD", "DATE_RANGE_TAIL", "PRIORITY", "ID", "ZID", 
            "ZDATE", "SHORT_DATE", "RELATIVE_DATE", "NUM_ID", "H1_HEADER", 
            "H2_HEADER", "H3_HEADER", "H4_HEADER", "TWO_SPACE_DASH", "FOUR_SPACE_DASH", 
            "SYMBOL", "DOLLAR", "HAT", "DASH", "DOT", "FSLASH", "UNDERSCORE", 
            "SPACE", "LPAREN", "RPAREN", "HASH", "AT_SIGN", "PLUS", "PERCENT", 
            "SQUOTE", "DQUOTE", "TILDE", "STAR", "LANGLE", "RANGLE", "COLON" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "NL", "LOWER_O", "LOWER_X", "DATE", "TIME", "CREATE_RANGE_HEAD", 
                  "MODIFY_RANGE_HEAD", "DATE_RANGE_TAIL", "PRIORITY", "ID", 
                  "ZID", "ZDATE", "SHORT_DATE", "RELATIVE_DATE", "NUM_ID", 
                  "H1_HEADER", "H2_HEADER", "H3_HEADER", "H4_HEADER", "TWO_SPACE_DASH", 
                  "FOUR_SPACE_DASH", "SYMBOL", "DOLLAR", "HAT", "DASH", 
                  "DOT", "FSLASH", "UNDERSCORE", "SPACE", "LPAREN", "RPAREN", 
                  "HASH", "AT_SIGN", "PLUS", "PERCENT", "SQUOTE", "DQUOTE", 
                  "TILDE", "STAR", "LANGLE", "RANGLE", "COLON", "UPPER_LETTER", 
                  "LOWER_LETTER", "ZID_CHAR", "NUM", "FIRST_D_NUM", "FIRST_M_NUM", 
                  "ALPHA", "ALPHANUM" ]

    grammarFileName = "ZorgFile.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


