# Generated from ZorgFile.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,38,252,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,1,0,1,0,1,1,1,1,1,2,1,2,1,2,1,3,1,3,1,3,1,4,1,4,1,4,
        1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,6,3,6,121,8,6,1,6,
        1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,
        1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,12,1,12,1,12,1,13,1,13,
        1,13,5,13,154,8,13,10,13,12,13,157,9,13,1,14,1,14,1,14,1,14,1,14,
        3,14,164,8,14,1,15,1,15,1,15,5,15,169,8,15,10,15,12,15,172,9,15,
        1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,19,
        1,19,1,20,1,20,1,21,1,21,1,22,1,22,1,23,1,23,1,24,1,24,1,25,1,25,
        1,26,1,26,1,27,1,27,1,28,1,28,1,29,1,29,1,30,1,30,1,31,1,31,1,32,
        1,32,1,33,1,33,1,34,1,34,1,35,1,35,1,36,1,36,1,37,1,37,1,38,1,38,
        1,39,1,39,1,40,1,40,3,40,230,8,40,1,41,1,41,1,42,1,42,1,43,1,43,
        1,44,1,44,3,44,240,8,44,1,45,1,45,3,45,244,8,45,1,46,1,46,1,46,1,
        46,1,46,1,46,1,46,0,0,47,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,
        19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,
        41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,
        63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,0,79,0,81,0,83,0,85,
        0,87,0,89,0,91,0,93,0,1,0,2,10,0,33,33,36,36,38,38,44,44,59,59,61,
        61,63,63,91,93,96,96,123,125,6,0,65,72,74,78,80,90,97,105,107,107,
        109,122,251,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,
        1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,
        1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,
        1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,
        1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,
        1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,
        1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,
        1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,1,95,1,0,0,0,3,97,
        1,0,0,0,5,99,1,0,0,0,7,102,1,0,0,0,9,105,1,0,0,0,11,113,1,0,0,0,
        13,120,1,0,0,0,15,124,1,0,0,0,17,126,1,0,0,0,19,128,1,0,0,0,21,139,
        1,0,0,0,23,144,1,0,0,0,25,147,1,0,0,0,27,150,1,0,0,0,29,158,1,0,
        0,0,31,165,1,0,0,0,33,173,1,0,0,0,35,177,1,0,0,0,37,183,1,0,0,0,
        39,185,1,0,0,0,41,187,1,0,0,0,43,189,1,0,0,0,45,191,1,0,0,0,47,193,
        1,0,0,0,49,195,1,0,0,0,51,197,1,0,0,0,53,199,1,0,0,0,55,201,1,0,
        0,0,57,203,1,0,0,0,59,205,1,0,0,0,61,207,1,0,0,0,63,209,1,0,0,0,
        65,211,1,0,0,0,67,213,1,0,0,0,69,215,1,0,0,0,71,217,1,0,0,0,73,219,
        1,0,0,0,75,221,1,0,0,0,77,223,1,0,0,0,79,225,1,0,0,0,81,229,1,0,
        0,0,83,231,1,0,0,0,85,233,1,0,0,0,87,235,1,0,0,0,89,239,1,0,0,0,
        91,243,1,0,0,0,93,245,1,0,0,0,95,96,5,91,0,0,96,2,1,0,0,0,97,98,
        5,93,0,0,98,4,1,0,0,0,99,100,5,91,0,0,100,101,5,91,0,0,101,6,1,0,
        0,0,102,103,5,93,0,0,103,104,5,93,0,0,104,8,1,0,0,0,105,106,5,61,
        0,0,106,107,5,61,0,0,107,108,5,61,0,0,108,109,5,61,0,0,109,110,5,
        61,0,0,110,111,5,61,0,0,111,112,5,61,0,0,112,10,1,0,0,0,113,114,
        5,42,0,0,114,115,5,42,0,0,115,116,5,42,0,0,116,117,5,42,0,0,117,
        118,5,42,0,0,118,12,1,0,0,0,119,121,5,13,0,0,120,119,1,0,0,0,120,
        121,1,0,0,0,121,122,1,0,0,0,122,123,5,10,0,0,123,14,1,0,0,0,124,
        125,5,111,0,0,125,16,1,0,0,0,126,127,5,120,0,0,127,18,1,0,0,0,128,
        129,5,50,0,0,129,130,3,83,41,0,130,131,3,83,41,0,131,132,3,83,41,
        0,132,133,3,41,20,0,133,134,3,87,43,0,134,135,3,83,41,0,135,136,
        3,41,20,0,136,137,3,85,42,0,137,138,3,83,41,0,138,20,1,0,0,0,139,
        140,2,48,50,0,140,141,3,83,41,0,141,142,2,48,53,0,142,143,3,83,41,
        0,143,22,1,0,0,0,144,145,3,39,19,0,145,146,3,93,46,0,146,24,1,0,
        0,0,147,148,3,75,37,0,148,149,3,93,46,0,149,26,1,0,0,0,150,155,3,
        91,45,0,151,154,3,91,45,0,152,154,3,47,23,0,153,151,1,0,0,0,153,
        152,1,0,0,0,154,157,1,0,0,0,155,153,1,0,0,0,155,156,1,0,0,0,156,
        28,1,0,0,0,157,155,1,0,0,0,158,159,3,93,46,0,159,160,3,55,27,0,160,
        161,3,81,40,0,161,163,3,81,40,0,162,164,3,81,40,0,163,162,1,0,0,
        0,163,164,1,0,0,0,164,30,1,0,0,0,165,170,3,83,41,0,166,169,3,91,
        45,0,167,169,3,47,23,0,168,166,1,0,0,0,168,167,1,0,0,0,169,172,1,
        0,0,0,170,168,1,0,0,0,170,171,1,0,0,0,171,32,1,0,0,0,172,170,1,0,
        0,0,173,174,5,32,0,0,174,175,5,32,0,0,175,176,5,45,0,0,176,34,1,
        0,0,0,177,178,5,32,0,0,178,179,5,32,0,0,179,180,5,32,0,0,180,181,
        5,32,0,0,181,182,5,45,0,0,182,36,1,0,0,0,183,184,7,0,0,0,184,38,
        1,0,0,0,185,186,5,94,0,0,186,40,1,0,0,0,187,188,5,45,0,0,188,42,
        1,0,0,0,189,190,5,46,0,0,190,44,1,0,0,0,191,192,5,47,0,0,192,46,
        1,0,0,0,193,194,5,95,0,0,194,48,1,0,0,0,195,196,5,32,0,0,196,50,
        1,0,0,0,197,198,5,40,0,0,198,52,1,0,0,0,199,200,5,41,0,0,200,54,
        1,0,0,0,201,202,5,35,0,0,202,56,1,0,0,0,203,204,5,64,0,0,204,58,
        1,0,0,0,205,206,5,43,0,0,206,60,1,0,0,0,207,208,5,37,0,0,208,62,
        1,0,0,0,209,210,5,39,0,0,210,64,1,0,0,0,211,212,5,34,0,0,212,66,
        1,0,0,0,213,214,5,126,0,0,214,68,1,0,0,0,215,216,5,42,0,0,216,70,
        1,0,0,0,217,218,5,60,0,0,218,72,1,0,0,0,219,220,5,62,0,0,220,74,
        1,0,0,0,221,222,5,58,0,0,222,76,1,0,0,0,223,224,2,65,90,0,224,78,
        1,0,0,0,225,226,2,97,122,0,226,80,1,0,0,0,227,230,3,83,41,0,228,
        230,7,1,0,0,229,227,1,0,0,0,229,228,1,0,0,0,230,82,1,0,0,0,231,232,
        2,48,57,0,232,84,1,0,0,0,233,234,2,48,51,0,234,86,1,0,0,0,235,236,
        2,48,49,0,236,88,1,0,0,0,237,240,3,77,38,0,238,240,3,79,39,0,239,
        237,1,0,0,0,239,238,1,0,0,0,240,90,1,0,0,0,241,244,3,89,44,0,242,
        244,3,83,41,0,243,241,1,0,0,0,243,242,1,0,0,0,244,92,1,0,0,0,245,
        246,3,83,41,0,246,247,3,83,41,0,247,248,3,87,43,0,248,249,3,83,41,
        0,249,250,3,85,42,0,250,251,3,83,41,0,251,94,1,0,0,0,10,0,120,153,
        155,163,168,170,229,239,243,0
    ]

class ZorgFileLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    NL = 7
    LOWER_O = 8
    LOWER_X = 9
    DATE = 10
    TIME = 11
    CREATE_RANGE_HEAD = 12
    DATE_RANGE_TAIL = 13
    ID = 14
    ZID = 15
    NUM_ID = 16
    TWO_SPACE_DASH = 17
    FOUR_SPACE_DASH = 18
    SYMBOL = 19
    HAT = 20
    DASH = 21
    DOT = 22
    FSLASH = 23
    UNDERSCORE = 24
    SPACE = 25
    LPAREN = 26
    RPAREN = 27
    HASH = 28
    AT_SIGN = 29
    PLUS = 30
    PERCENT = 31
    SQUOTE = 32
    DQUOTE = 33
    TILDE = 34
    STAR = 35
    LANGLE = 36
    RANGLE = 37
    COLON = 38

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'['", "']'", "'[['", "']]'", "'======='", "'*****'", "'o'", 
            "'x'", "'  -'", "'    -'", "'^'", "'-'", "'.'", "'/'", "'_'", 
            "' '", "'('", "')'", "'#'", "'@'", "'+'", "'%'", "'''", "'\"'", 
            "'~'", "'*'", "'<'", "'>'", "':'" ]

    symbolicNames = [ "<INVALID>",
            "NL", "LOWER_O", "LOWER_X", "DATE", "TIME", "CREATE_RANGE_HEAD", 
            "DATE_RANGE_TAIL", "ID", "ZID", "NUM_ID", "TWO_SPACE_DASH", 
            "FOUR_SPACE_DASH", "SYMBOL", "HAT", "DASH", "DOT", "FSLASH", 
            "UNDERSCORE", "SPACE", "LPAREN", "RPAREN", "HASH", "AT_SIGN", 
            "PLUS", "PERCENT", "SQUOTE", "DQUOTE", "TILDE", "STAR", "LANGLE", 
            "RANGLE", "COLON" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "NL", 
                  "LOWER_O", "LOWER_X", "DATE", "TIME", "CREATE_RANGE_HEAD", 
                  "DATE_RANGE_TAIL", "ID", "ZID", "NUM_ID", "TWO_SPACE_DASH", 
                  "FOUR_SPACE_DASH", "SYMBOL", "HAT", "DASH", "DOT", "FSLASH", 
                  "UNDERSCORE", "SPACE", "LPAREN", "RPAREN", "HASH", "AT_SIGN", 
                  "PLUS", "PERCENT", "SQUOTE", "DQUOTE", "TILDE", "STAR", 
                  "LANGLE", "RANGLE", "COLON", "UPPER_LETTER", "LOWER_LETTER", 
                  "ZID_CHAR", "NUM", "FIRST_D_NUM", "FIRST_M_NUM", "ALPHA", 
                  "ALPHANUM", "SHORT_DATE" ]

    grammarFileName = "ZorgFile.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


